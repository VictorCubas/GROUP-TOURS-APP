# Generated by Django 4.2 on 2025-10-23 10:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('empleado', '0004_alter_empleado_salario'),
        ('reserva', '0012_pasajero_precio_asignado'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComprobantePago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_comprobante', models.CharField(editable=False, help_text='Número único del comprobante (ej: CPG-2025-0001)', max_length=20, unique=True)),
                ('fecha_pago', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se registró el pago')),
                ('tipo', models.CharField(choices=[('sena', 'Seña'), ('pago_parcial', 'Pago Parcial'), ('pago_total', 'Pago Total'), ('devolucion', 'Devolución')], help_text='Tipo de pago realizado', max_length=20)),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto total del comprobante', max_digits=12)),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia Bancaria'), ('tarjeta_debito', 'Tarjeta de Débito'), ('tarjeta_credito', 'Tarjeta de Crédito'), ('cheque', 'Cheque'), ('qr', 'Pago QR'), ('otro', 'Otro')], help_text='Método de pago utilizado', max_length=20)),
                ('referencia', models.CharField(blank=True, help_text='Número de referencia/comprobante del banco, cheque, etc.', max_length=100, null=True)),
                ('observaciones', models.TextField(blank=True, help_text='Notas adicionales sobre el pago', null=True)),
                ('pdf_generado', models.FileField(blank=True, help_text='PDF del comprobante generado', null=True, upload_to='comprobantes/pdf/')),
                ('activo', models.BooleanField(default=True, help_text='Indica si el comprobante está activo (no fue anulado)')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('empleado', models.ForeignKey(help_text='Empleado que registró el pago', on_delete=django.db.models.deletion.PROTECT, related_name='comprobantes_emitidos', to='empleado.empleado')),
                ('reserva', models.ForeignKey(help_text='Reserva asociada a este comprobante', on_delete=django.db.models.deletion.PROTECT, related_name='comprobantes', to='reserva.reserva')),
            ],
            options={
                'verbose_name': 'Comprobante de Pago',
                'verbose_name_plural': 'Comprobantes de Pago',
                'db_table': 'ComprobantePago',
                'ordering': ['-fecha_pago'],
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_voucher', models.CharField(editable=False, help_text='Código único del voucher (ej: RSV-2025-0001-VOUCHER)', max_length=30, unique=True)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True, help_text='Fecha de emisión del voucher')),
                ('qr_code', models.ImageField(blank=True, help_text='Código QR para validación rápida', null=True, upload_to='vouchers/qr/')),
                ('pdf_generado', models.FileField(blank=True, help_text='PDF del voucher generado', null=True, upload_to='vouchers/pdf/')),
                ('instrucciones_especiales', models.TextField(blank=True, help_text='Instrucciones adicionales para el cliente', null=True)),
                ('contacto_emergencia', models.CharField(default='+595 981 123 456', help_text='Teléfono de contacto de emergencia 24/7', max_length=100)),
                ('url_publica', models.CharField(blank=True, help_text='URL pública para visualizar el voucher online', max_length=200, null=True)),
                ('activo', models.BooleanField(default=True, help_text='Indica si el voucher está activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('reserva', models.OneToOneField(help_text='Reserva asociada a este voucher', on_delete=django.db.models.deletion.PROTECT, related_name='voucher', to='reserva.reserva')),
            ],
            options={
                'verbose_name': 'Voucher',
                'verbose_name_plural': 'Vouchers',
                'db_table': 'Voucher',
            },
        ),
        migrations.CreateModel(
            name='ComprobantePagoDistribucion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto de este comprobante asignado a este pasajero', max_digits=12)),
                ('observaciones', models.TextField(blank=True, help_text='Notas sobre esta distribución específica', null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('comprobante', models.ForeignKey(help_text='Comprobante de pago del cual se distribuye el monto', on_delete=django.db.models.deletion.CASCADE, related_name='distribuciones', to='comprobante.comprobantepago')),
                ('pasajero', models.ForeignKey(help_text='Pasajero al que se le asigna este monto', on_delete=django.db.models.deletion.PROTECT, related_name='distribuciones_pago', to='reserva.pasajero')),
            ],
            options={
                'verbose_name': 'Distribución de Pago',
                'verbose_name_plural': 'Distribuciones de Pago',
                'db_table': 'ComprobantePagoDistribucion',
                'unique_together': {('comprobante', 'pasajero')},
            },
        ),
    ]
